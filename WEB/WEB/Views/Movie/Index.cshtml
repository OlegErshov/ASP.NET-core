@model List<Movie>

@{
    ViewData["Title"] = "Каталог";
    var request = ViewContext.HttpContext.Request;
    var returnUrl = request.Path + request.QueryString.ToUriComponent();
    string? category = request.RouteValues["genre"]?.ToString();
    var genres = ViewData["genres"] as IEnumerable<Genre>;
    string? genre = request.Query["genre"];
    var currentGenre = ViewData["currentGenre"];
    var currentPage = ViewData["currentPage"] as int? ?? 1;
    var totalPages = ViewData["totalPages"] as int? ?? 1;
    int prev = currentPage == 1 ? 1 : currentPage - 1;
    int next = currentPage == totalPages ? totalPages : currentPage + 1;
}


<h1>Каталог</h1>

<div class="col-2 border-2">
    <ul class="nav">
        <li class="nav-item dropdown">
            <button class="btn dropdown-toggle" data-bs-toggle="dropdown"
                    aria-expanded="false">
                @currentGenre
            </button>
            <ul class="dropdown-menu">
                <li>
                    <a class="dropdown-item" asp-controller="movie" asp-route-genre=@null>Все</a>
                </li>
                @if (genres != null)
                {
                    foreach (var item in genres)
                    {
                        <li>
                            <a class="dropdown-item" asp-controller="movie" asp-route-genre="@item.NormalizedName">
                                @item.Name
                            </a>
                        </li>
                    }
                }
            </ul>
        </li>
    </ul>
</div>
    <div>
        @{
        await Html.RenderPartialAsync("Partials/_MovieCatalogPartial", new
            {
                Movies = Model,
                Genre = genre,
                CurrentPage = currentPage,
                TotalPages = totalPages,
                ReturnUrl = returnUrl,
                IsAdmin = false
            });
        }
    </div>
    

   
